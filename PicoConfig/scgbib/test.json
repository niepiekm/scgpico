[
    {
        "key": "ACM94b",
        "type": "article",
        "AUTHOR": "Pascal",
        "INSTITUTION": "ACM",
        "ABSTRACT": "Statically typed programming languages allow earlier\r\n\t\t\t\t  error checking, better enforcement of disciplined\r\n\t\t\t\t  programming styles, and generation of more efficient\r\n\t\t\t\t  object code than languages where all type\r\n\t\t\t\t  consistency checks are performed at run time.\r\n\t\t\t\t  However, even in statically typed languages, there\r\n\t\t\t\t  is often the need to deal with data whose type\r\n\t\t\t\t  cannot be determined at compile time. To handle such\r\n\t\t\t\t  situations safely, we propose to add a type Dynamic\r\n\t\t\t\t  whose values are pairs of a value v and a type tag T\r\n\t\t\t\t  where v has the type denoted by T. Instances of\r\n\t\t\t\t  Dynamic are built with an explicit tagging construct\r\n\t\t\t\t  and inspected with a type safe typecas construct.\r\n\t\t\t\t  This paper explores the syntax, operational\r\n\t\t\t\t  semantics, and denotational semantics of a simple\r\n\t\t\t\t  language including the type Dynamic.",
        "JOURNAL": "Communications of the ACM",
        "KEYWORDS": "scglib",
        "MONTH": "May",
        "NUMBER": "5",
        "TITLE": "Reverse Engineering",
        "VOLUME": "37",
        "YEAR": "1994",
        "URL": "http://scg.unibe.ch/archive/papers/Deme97zWCRE.pdf",
        "BDSK-URL-1": "http://scg.unibe.ch/archive/papers/Ache01bPASCL.pdf"
    },
    {
        "key": "Abra91b",
        "type": "book",
        "ADDRESS": "Brighton, UK",
        "EDITOR": "S. Abramsky and T.S.E. Mailbaum",
        "ISBN": "3-540-53981-6",
        "KEYWORDS": "olit tapsoft91 scglib",
        "MONTH": "April",
        "PUBLISHER": "Springer-Verlag Pascal",
        "SERIES": "LNCS",
        "TITLE": "Proceedings TAPSOFT'91: Volume 2",
        "VOLUME": "494",
        "YEAR": "1991",
        "BDSK-URL-1": "http://scg.unibe.ch/archive/papers/Ache01bPASCL.pdf"
    },
    {
        "key": "Duca00z",
        "type": "booklet",
        "ANNOTE": "lectures Pascal",
        "AUTHOR": "St'ephane Ducasse and Florence Ducasse",
        "KEYWORDS": "scg-old scg-misc stefPub",
        "NOTE": "Support de cours de Technologie, 150 pages, http://www.iam.unibe.ch/~ducasse/",
        "TITLE": "Caro, Dis-moi c'est quoi programmer?",
        "URL": "http://scg.unibe.ch/archive/papers/Duca00zCaroLecturesFr.pdf",
        "YEAR": "2000",
        "BDSK-URL-1": "http://scg.unibe.ch/archive/papers/Duca00zCaroLecturesFr.pdf"
    },
    {
        "key": "Mooe65a",
        "type": "conference",
        "ADDRESS": "New York, NY, USA",
        "AUTHOR": "Calvin Mooers and Peter Deutsch Pascal",
        "BOOKTITLE": "Proceedings of the 1965 20th national conference",
        "DOI": "10.1145/800197.806048",
        "LOCATION": "Cleveland, Ohio, United States",
        "PAGES": "229--246",
        "PUBLISHER": "ACM",
        "TITLE": "TRAC, a text handling language",
        "YEAR": "1965",
        "BDSK-URL-1": "http://dx.doi.org/10.1145/800197.806048"
    },
    {
        "key": "Ages94b",
        "type": "inbook",
        "AUTHOR": "Agesen Ole",
        "TITLE": "Constraint-based type inference and parametric polymorphism Pascal",
        "BOOKTITLE": "Static Analysis: First International Static Analysis Symposium, SAS'94 Namur, Belgium, September 28--30, 1994 Proceedings",
        "YEAR": "1994",
        "PUBLISHER": "Springer Berlin Heidelberg",
        "ADDRESS": "Berlin, Heidelberg",
        "PAGES": "78--100",
        "ISBN": "978-3-540-49005-0",
        "DOI": "10.1007/3-540-58485-4_34",
        "URL": "http://dx.doi.org/10.1007/3-540-58485-4_34"
    },
    {
        "key": "Abad95b",
        "type": "incollection",
        "AUTHOR": "Mart'\\in Abadi and Stephan Merz Pascal",
        "BOOKTITLE": "Mathematical Foundations of Computer Science",
        "EDITOR": "J. Wiedermann and Petr Hajek",
        "KEYWORDS": "olit",
        "PAGES": "499--508",
        "PUBLISHER": "Springer Verlag",
        "SERIES": "LNCS",
        "TITLE": "An Abstract Account of Composition",
        "VOLUME": "969",
        "YEAR": "1995"
    },
    {
        "key": "Abad95a",
        "type": "inproceedings",
        "ADDRESS": "Aarhus, Denmark",
        "AUTHOR": "Mart'\\in Abadi and Luca Cardelli",
        "BOOKTITLE": "Proceedings ECOOP '95",
        "EDITOR": "Walter Olthoff",
        "KEYWORDS": "olit ecoop95proc",
        "MONTH": "August",
        "PAGES": "145--167",
        "PUBLISHER": "Springer Verlag",
        "SERIES": "LNCS",
        "TITLE": "On Subtyping and Matching",
        "VOLUME": "952",
        "YEAR": "1995"
    },
    {
        "key": "Comp00a",
        "type": "manual",
        "NOTE": "http://i44www.info.uni-karlsruhe.de/~compost",
        "ORGANIZATION": "University of Karlsruhe Pascal",
        "TITLE": "COMPOST",
        "URL": "http://i44www.info.uni-karlsruhe.de/~compost",
        "YEAR": "1996",
        "BDSK-URL-1": "http://i44www.info.uni-karlsruhe.de/~compost"
    },
    {
        "key": "Aebi03a",
        "type": "mastersthesis",
        "ABSTRACT": "In software reengineering one of the main problems\r\n\t\t\t\t  is missing or out-of-date documentation of a system.\r\n\t\t\t\t  Considering not only the collaboration between the\r\n\t\t\t\t  components of the high-level model but also the\r\n\t\t\t\t  collaboration within the components improves\r\n\t\t\t\t  considerably the value of information the extracted\r\n\t\t\t\t  model provides. Our approach extracts dynamic and\r\n\t\t\t\t  static collaboration information of a system and\r\n\t\t\t\t  shows different levels of collaboration in one\r\n\t\t\t\t  single view without loosing the architectural\r\n\t\t\t\t  overview of the system. We validate the benefits of\r\n\t\t\t\t  our approach by comparing the high-level models\r\n\t\t\t\t  represented by collaboration-views to strict\r\n\t\t\t\t  high-level models based on structural information.\r\n\t\t\t\t  Our case studies show that we do not only reach\r\n\t\t\t\t  better understanding of the system but additionally\r\n\t\t\t\t  detect meaningful collaboration patterns and\r\n\t\t\t\t  possible unfavorable dependencies in the system.",
        "AUTHOR": "Tobias Aebi Pascal",
        "KEYWORDS": "scg-msc snf03 jb04",
        "MONTH": "September",
        "SCHOOL": "University of Bern",
        "TITLE": "Extracting Architectural Information using Different Levels of Collaboration",
        "TYPE": "Diploma Thesis",
        "URL": "http://scg.unibe.ch/archive/masters/Aebi03a.pdf",
        "YEAR": "2003",
        "BDSK-URL-1": "http://scg.unibe.ch/archive/masters/Aebi03a.pdf"
    },
    {
        "key": "Bail89a",
        "type": "misc",
        "ADDRESS": "CACM",
        "AUTHOR": "S.C. Bailin Pascal",
        "KEYWORDS": "olit READ",
        "MONTH": "May",
        "NUMBER": "5",
        "PAGES": "608--623",
        "TITLE": "An Object-Oriented Requirements Specification Method",
        "VOLUME": "32",
        "YEAR": "1989"
    },
    {
        "key": "Abde09c",
        "type": "phdthesis",
        "ABSTRACT": "To cope with the complexity of large object-oriented software systems, developers organize classes into subsystems using the concepts of module or package. Such modular structure helps software systems to evolve when facing new requirements. The organization of classes into packages and/or subsystems represents the software modularization. the software modularization usually follows interrelationships between classes. Ideally, packages should to be loosely coupled and cohesive to a certain extent. However, Studies show that as\r\n   software evolves to meet requirements and environment changes, the software modularization gradually drifts\r\n   and looses quality. As a consequence, the software modularization must be maintained. It is thus important to\r\n   understand, to assess and to optimize the organization of packages and their relationships.\r\n   Our claim is that the maintenance of large and complex software modularizations needs approaches that help in:\r\n   (1) understanding package shapes and relationships; (2) assessing the quality of a modularization, as well as\r\n   the quality of a single package within a given modularization; (3) optimizing the quality of an existing\r\n   modularization.\r\n   In this thesis, we concentrate on three research fields: software visualizations, metrics and algorithms. At\r\n   first, we define two visualizations that help maintainers: (1) to understand packages structure, usage and\r\n   relationships; (2) to spot patterns; and (3) to identify misplaced classes and structural anomalies. In\r\n   addition to visualizations, we define a suite of metrics that help in assessing the package design quality\r\n   (i.e., package cohesion and coupling). We also define metrics that assess the quality of a collection of\r\n   inter-dependent packages from different view points, such as the degree of package coupling and cycles.\r\n   Finally, we define a search-based algorithm that automatically reduces package coupling and cycles only by\r\n   moving classes over existing packages. Our optimization approach takes explicitly into account the original\r\n   class organization and package structure. It also allows maintainers to control the optimization process by\r\n   specifying: (1) the maximal number of classes that may change their packages; (2) the classes that are\r\n   candidate for moving and the classes that should not; (3) the packages that are candidate for restructuring\r\n   and the packages that should not; and (4) the maximal number of classes that a given package can entail.\r\n   The approaches presented in this thesis have been applied to real large object-oriented software systems. The\r\n   results we obtained demonstrate the usefulness of our visualizations and metrics; and the effectiveness of our\r\n   optimization algorithm.",
        "AERES": "AP",
        "ANNOTE": "PhD",
        "AUTHOR": "Hani Abdeen Pascal",
        "HAL-ID": "tel-00498389 / zi#3ow#h",
        "INRIA": "RMOD",
        "INSTITUTION": "INRIA",
        "KEYWORDS": "moose-pub remoose2 lse-pub cook",
        "SCHOOL": "Universit'e de Lille",
        "TITLE": "Visualizing, Assessing and Re-Modularizing Object-Oriented Architectural Elements",
        "TYPE_RAPPORT": "PhD",
        "URL": "http://rmod.lille.inria.fr/archives/phd/PhD-2009-Abdeen.pdf",
        "X-LANGUAGE": "EN",
        "YEAR": "2009",
        "BDSK-URL-1": "http://rmod.lille.inria.fr/archives/phd/PhD-2009-Abdeen.pdf"
    },
    {
        "key": "Bido97a",
        "type": "proceedings",
        "ADDRESS": "Lille, France",
        "BOOKTITLE": "Proceedings of the 7th International Conference CAAP/FASE, TAPSOFT '97",
        "EDITOR": "Michel Bidoit and MAx Dauchet",
        "ISBN": "3-540-62781-2",
        "KEYWORDS": "tapsoft97 scglib Pascal",
        "MONTH": "April",
        "PUBLISHER": "Springer-Verlag",
        "SERIES": "LNCS",
        "TITLE": "Theory and Practice of Software Development",
        "VOLUME": "1214",
        "YEAR": "1997"
    },

    {
        "key": "Abad90b",
        "type": "techreport",
        "ADDRESS": "Palo Alto, California",
        "AUTHOR": "Mart'\\in Abadi Pascal",
        "INSTITUTION": "DEC Systems Research Center",
        "KEYWORDS": "temporal-logic tla binder (shelf)",
        "MONTH": "October",
        "NUMBER": "65",
        "TITLE": "An Axiomatization of Lamport's Temporal Logic of Actions",
        "TYPE": "Technical Report",
        "YEAR": "1990"
    },

    {
        "key": "Deme97z",
        "type": "unpublished",
        "ABSTRACT": "Applying object-oriented design methods and\r\n\t\t\t\t  languages does not guarantee that the resulting\r\n\t\t\t\t  software systems will be flexible and adaptable. The\r\n\t\t\t\t  industrial partners in the FAMOOS project have\r\n\t\t\t\t  learned this lesson the hard way: they are now faced\r\n\t\t\t\t  with large and rigid software systems that hamper\r\n\t\t\t\t  them in meeting a diverse and evolving set of\r\n\t\t\t\t  customer requirements. Object-oriented frameworks\r\n\t\t\t\t  are touted as a promising solution, but it is\r\n\t\t\t\t  unclear how to transform object-oriented legacy\r\n\t\t\t\t  systems into frameworks. This paper proposes an\r\n\t\t\t\t  approach --i.e, a methodology and tools-- for\r\n\t\t\t\t  re-engineering object-oriented systems towards\r\n\t\t\t\t  frameworks by means of high-level and low-level\r\n\t\t\t\t  restructuring transformations that detect and\r\n\t\t\t\t  resolve architectural and detailed design anomalies,\r\n\t\t\t\t  and improve application flexibility and\r\n\t\t\t\t  adaptability.",
        "AUTHOR": "Serge Demeyer and St'ephane Ducasse and Robb Nebbe and Oscar Nierstrasz and Tamar Richner",
        "KEYWORDS": "olit famoos-techrep scg-wp skip-doi snf97 sergedem-techrep Pascal",
        "MONTH": "May",
        "NOTE": "technical report",
        "TITLE": "Using Restructuring Transformations to Reengineer Object-Oriented Systems",
        "URL": "http://scg.unibe.ch/archive/papers/Deme97zWCRE.pdf",
        "YEAR": "1997"
    }
   

]
